{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x582397784AE2a2C98647729fA6E760aea75634a6",
      "kind": "uups"
    },
    {
      "address": "0x24F91240B669874ef4Ea60B81a6710ebc21d1EAD",
      "kind": "uups"
    }
  ],
  "impls": {
    "330eff1a29d7736b4144fa85cf9e395f4692cf002559643b39a36f8e823d47cc": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "txHash": "0x02706b8f47655adfdfae695f35b489e4b530004719b7d56f2128e18e359a80b0",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12354",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12016",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:541"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12016": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12354": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242"
      ]
    },
    "c362139e841065b25c5e64d5daa1452bedc3636774b78063ee8dd79008033ac8": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12294",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)11956",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:521"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)11956": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12294": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7571d5e01481723a3b9f89cedd511c1e56ad0036c78090f0135495c7fb7d77ad": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12294",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)11956",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:521"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)11956": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12294": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "590660fe563ecf5e3b0f7353412c3bc3290337c9a5eb53f48676790f07c18194": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12235",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)11897",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:505"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)11897": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12235": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6568e1a7eff93ddc1601dd94557918eee1b2bfba92dc91fbe99808a75dfcba49": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12411",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12073",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:559"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12073": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12411": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242"
      ]
    },
    "a3b3ca89e258f0524e0d59ebd720818a87dd7fe8c675e72890aff760f8719ff2": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12414",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12076",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:562"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12076": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12414": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242"
      ]
    },
    "1d10f462b15ce0be0e8a56c2c7c4608327d45082301b733eb595162a0656d289": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12438",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12100",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:579"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12100": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12438": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ab9c731aad85e76fb437eb0b116082611545d4f60d47b73fc2576d28dcf8e627": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12440",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12102",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:579"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12102": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12440": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a5ec250d17234e2b318080fe254e3f786aee98cbb5d9c3d7c5438c13e6acf673": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12457",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12119",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:587"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12119": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12457": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "435be0f51a9b42a884f93d54997974975cacef2a21b101c8483ed3dfdb136698": {
      "address": "0xdF031Ac2b3574ABb8DEF300Ac6555Afb0be4F242",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "usdt",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3609",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:27"
          },
          {
            "label": "mmUSDTToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(mmUSDT)12460",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:28"
          },
          {
            "label": "withdrawNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(WithdrawNFT)12122",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:29"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:31"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:32"
          },
          {
            "label": "bridgeBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:33"
          },
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:34"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:40"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:41"
          },
          {
            "label": "withdrawRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "VaultContract",
            "src": "contracts/VaultContract.sol:590"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)890_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IERC20)3609": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(WithdrawNFT)12122": {
            "label": "contract WithdrawNFT",
            "numberOfBytes": "20"
          },
          "t_contract(mmUSDT)12460": {
            "label": "contract mmUSDT",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawStatus)9913": {
            "label": "enum VaultContract.WithdrawStatus",
            "members": [
              "PENDING",
              "READY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)9925_storage)": {
            "label": "mapping(uint256 => struct VaultContract.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)9925_storage": {
            "label": "struct VaultContract.WithdrawRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "readyTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawStatus)9913",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requester",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a87452675a2a425cda101ae48876478dce0aaaea243e95f68bec04e98fda4e74": {
      "address": "0x3FA5DC67c0ffD01EAdb233D2Fb2d71197c5252f0",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:37"
          },
          {
            "label": "withdrawalAmounts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:40"
          },
          {
            "label": "vaultContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:288"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)507_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "84f3827d610a355d9b473d8b0fcfe7373149ee53dbf059b3d1d2435b3fba0656": {
      "address": "0x3FA5DC67c0ffD01EAdb233D2Fb2d71197c5252f0",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:39"
          },
          {
            "label": "withdrawalAmounts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:42"
          },
          {
            "label": "vaultContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:286"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)507_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5d8daeb83f78e2baa63d83c24ff4128a19405394ad21e0ec18e70b6667edf0d6": {
      "address": "0x3FA5DC67c0ffD01EAdb233D2Fb2d71197c5252f0",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:26"
          },
          {
            "label": "withdrawalAmounts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:29"
          },
          {
            "label": "vaultContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WithdrawNFT",
            "src": "contracts/WithdrawNFT.sol:273"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)507_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)826_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
