/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockLendingProtocol,
  MockLendingProtocolInterface,
} from "../../../contracts/mocks/MockLendingProtocol";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "annualYieldRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPrincipal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getWithdrawStatus",
    outputs: [
      {
        internalType: "bool",
        name: "isReady",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "claimableTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setAnnualYieldRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setWithdrawDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawRequests",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234608757331560715760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160035562093a806004556101f4600555610d49908161008d8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081630288a39c146109d7575080631851f000146107cb57806347e7ef24146108fb5780636a84a985146108dd5780636abe7139146108bf578063715018a61461086657806372f0cb30146108455780638da5cb5b1461081c5780638f601f66146107cb57806395ccea671461078c578063992a7dfb14610721578063aad3ec961461047a578063bf806271146103db578063c3e2ca41146103ba578063d4fac45d14610386578063f2fde38b146102fd5763f3fef3a3146100da57600080fd5b346102e45760403660031901126102e4576100f36109f2565b6001600160a01b038116906024359061014e90602090610114851515610a1e565b61011f841515610a5a565b60405163d4fac45d60e01b81526001600160a01b03909116600482015233602482015291829081906044820190565b0381305afa80156102f15782916000916102b7575b501061027b57600354906000198214610265576020926001830160035560405161018c81610ab3565b8181526004858201913383526040810185815260608201904282526080830194600086528860005260028a5260406000209360018060a01b039060018060a01b03905116166bffffffffffffffffffffffff60a01b85541617845560018060a01b03905116600184019060018060a01b03166bffffffffffffffffffffffff60a01b825416179055516002830155516003820155019051151560ff80198354169116179055604051918252827f135605567eef5665b498ea18b69601beb78d35ce1945ec7116faba6cbc68e884853394a4604051908152f35b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b9150506020813d6020116102e9575b816102d360209383610ae5565b810103126102e45781905138610163565b600080fd5b3d91506102c6565b6040513d6000823e3d90fd5b346102e45760203660031901126102e4576103166109f2565b61031e610c0a565b6001600160a01b0316801561037057600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346102e45760403660031901126102e45760206103b26103a46109f2565b6103ac610a08565b90610b27565b604051908152f35b346102e45760203660031901126102e4576103d3610c0a565b600435600555005b346102e45760203660031901126102e457600435600052600260205260408060002061045682519161040c83610ab3565b80546001600160a01b039081168452600182015416602084015260028101548484015260038101546060840181905260049182015460ff1615156080909401938452905490610aa6565b905115908161046e575b825191151582526020820152f35b80915042101590610460565b346102e45760403660031901126102e4576104936109f2565b60243560008181526002602052604090206001810154919290916001600160a01b031633036106e857600482019182549260ff84166106b15781546001600160a01b0384811695911685900361067b576104f4600384015460045490610aa6565b421061063d5760ff191660019081179091556000848152602091825260408082203380845290845291819020546002949094018054915163d4fac45d60e01b81526001600160a01b0396909616600487015260248601929092529093909181604481305afa9081156102f15760009161060b575b508111156105b8575b505061057f81543384610c33565b54916040519283527f6b842ab4ec94ab290badaff8321d38467bdccfbb336cff4c0d0a78056d462c3960203394a4602060405160018152f35b8181116105ea576105c891610b07565b60008381526001602090815260408083203384529091529020555b8380610571565b505060008281526001602090815260408083203384529091528120556105e3565b90506020813d602011610635575b8161062660209383610ae5565b810103126102e4575186610568565b3d9150610619565b60405162461bcd60e51b815260206004820152601660248201527515da5d1a191c985dc819195b185e481b9bdd081b595d60521b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0a8ded6cadc40dad2e6dac2e8c6d60931b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152702737ba103a3432903932b8bab2b9ba32b960791b6044820152606490fd5b346102e45760203660031901126102e457600435600052600260205260a06040600020600180831b0381541690600180841b0360018201541690600281015460ff60046003840154930154169260405194855260208501526040840152606083015215156080820152f35b346102e45760403660031901126102e4576107c96107a86109f2565b6107b0610c0a565b600054602435916001600160a01b039182169116610c33565b005b346102e45760403660031901126102e4576107e46109f2565b6107ec610a08565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b346102e45760003660031901126102e4576000546040516001600160a01b039091168152602090f35b346102e45760203660031901126102e45761085e610c0a565b600480359055005b346102e45760003660031901126102e45761087f610c0a565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102e45760003660031901126102e4576020600554604051908152f35b346102e45760003660031901126102e4576020600354604051908152f35b346102e45760403660031901126102e4576109146109f2565b602435906001600160a01b031661092c811515610a1e565b610937821515610a5a565b6109716040516323b872dd60e01b60208201523360248201523060448201528360648201526064815261096b608482610ae5565b82610cb8565b806000526001602052604060002060018060a01b033316600052602052604060002061099e838254610aa6565b90556040519182527f1de3ece35391f6bba650736f2d5d3f12e2cfc54538a340cc5d762d34ca449de760203393a3602060405160018152f35b346102e45760003660031901126102e4576020906004548152f35b600435906001600160a01b03821682036102e457565b602435906001600160a01b03821682036102e457565b15610a2557565b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606490fd5b15610a6157565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b9190820180921161026557565b60a0810190811067ffffffffffffffff821117610acf57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610acf57604052565b9190820391821161026557565b8181029291811591840414171561026557565b6001600160a01b038082166000908152600160209081526040808320938616835292905220549291908315610c0257610b6991610b6391610c75565b42610b07565b6301e133808110610be7576301e1338081049060055490816127100194856127101161026557926000905b808210610bcd575050610bca93945064496cebb80091610bbe6301e13380610bc393069185610b14565b610b14565b0490610aa6565b90565b9093612710610bde88600193610b14565b04940190610b94565b9164496cebb800610bc3610bca9394610bbe60055485610b14565b506000925050565b6000546001600160a01b03163303610c1e57565b63118cdaa760e01b6000523360045260246000fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610c7391610c6e606483610ae5565b610cb8565b565b60018060a01b0316600052600160205260406000209060018060a01b0316600052602052604060002054610ca7574290565b62278cff1942014281116102655790565b906000602091828151910182855af1156102f1576000513d610d0a57506001600160a01b0381163b155b610ce95750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415610ce256fea26469706673582212207af71074a2af46fed15827c4d1b01d2f7c1f0c72c7747f2c20ded28ec44068c864736f6c634300081c0033";

type MockLendingProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLendingProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLendingProtocol__factory extends ContractFactory {
  constructor(...args: MockLendingProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockLendingProtocol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockLendingProtocol__factory {
    return super.connect(runner) as MockLendingProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLendingProtocolInterface {
    return new Interface(_abi) as MockLendingProtocolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockLendingProtocol {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockLendingProtocol;
  }
}
